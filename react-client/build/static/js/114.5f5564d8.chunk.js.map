{"version":3,"file":"static/js/114.5f5564d8.chunk.js","mappings":"gOA0GA,UApGA,WACC,IACMA,GADMC,EAAAA,EAAAA,YAAWC,EAAAA,GACFC,kBACrB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACYC,GAAYC,EAAAA,EAAAA,MAAhBC,IACRC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAa,IAAIC,gBAqBvB,OApBAd,EACEe,IAAI,QAAS,CACbC,OAAQ,CACPC,qBAAqB,GAEtBC,OAAQL,EAAWK,SAEnBC,MACA,YAIO,IAAD,IAHLC,KACCH,oBAAsCI,EAElC,EAFmBC,cAAmCC,EAEtD,EAFsChB,eAG3CD,EAAiBe,GACjBb,EAAkBe,MAGnBC,OAAM,SAAAC,GACNC,QAAQC,KAAK,wCAER,WACNd,EAAWe,WAEV,CAAC5B,IACJ,IAAM6B,GAAyBC,EAAAA,EAAAA,cAAY,WAC1CC,EAAAA,GAAAA,QACC/B,EAASgC,KAAT,0BAAiCvB,GAAoB,IAAM,CAC1DJ,cAAAA,EACAE,eAAAA,IAED,CACC0B,QAAS,oCACTC,QAAS,yCACTC,MAAO,wDAGP,CAACnC,EAAUO,EAAgBF,EAAeI,IAC7C,OACC,iBAAK2B,UAAU,uBAAf,WACC,gBAAKA,UAAU,WAAf,UACC,gBAAKA,UAAU,MAAf,UACC,gBAAKA,UAAU,+BAAf,UACC,UAAC,IAAD,YACC,gBAAKA,UAAU,OAAf,UACC,0DAED,SAAC,IAAD,CACCC,SACC,SAAC,IAAD,CACCC,KAAK,QACLC,QAAShC,EACTiC,SAAU,WACThC,GAAkB,SAAAiC,GAAC,OAAKA,QAI3BC,MAAM,mCAEP,SAAC,IAAD,CACCL,SACC,SAAC,IAAD,CACCC,KAAK,QACLC,QAASlC,EACTmC,SAAU,WACTlC,GAAiB,SAAAmC,GAAC,OAAKA,QAI1BC,MAAM,8CAEP,SAAC,IAAD,CACCL,SAAS,SAAC,IAAD,CAAUC,KAAK,QAAQC,SAAS,IACzCG,MAAM,iCAMX,gBAAKN,UAAU,MAAf,UACC,gBAAKA,UAAU,MAAf,UACC,SAAC,IAAD,CACCO,QAAQ,YACRL,KAAK,QACLM,MAAM,UACNC,QAAShB,EAJV","sources":["components/MarketingAndAnalytics/MarketingSetting.js"],"sourcesContent":["import { useCallback, useContext, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport AuthContext from '../../context/AuthProvider';\nimport { toast } from 'react-toastify';\nimport { Checkbox, Button, FormControlLabel, FormGroup } from '@mui/material';\n\nfunction MarketingSetting() {\n\tconst ctx = useContext(AuthContext);\n\tconst axiosPvt = ctx.useAxiosPrivate();\n\tconst [serviceOffers, setServiceOffers] = useState(true);\n\tconst [complianceInfo, setComplianceInfo] = useState(true);\n\tconst { id: urlpath } = useParams();\n\tuseEffect(() => {\n\t\tconst controller = new AbortController();\n\t\taxiosPvt\n\t\t\t.get('/user', {\n\t\t\t\tparams: {\n\t\t\t\t\tmarketingPreference: true,\n\t\t\t\t},\n\t\t\t\tsignal: controller.signal,\n\t\t\t})\n\t\t\t.then(\n\t\t\t\t({\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tmarketingPreference: { ServiceOffers: so, complianceInfo: ci },\n\t\t\t\t\t},\n\t\t\t\t}) => {\n\t\t\t\t\tsetServiceOffers(so);\n\t\t\t\t\tsetComplianceInfo(ci);\n\t\t\t\t}\n\t\t\t)\n\t\t\t.catch(e => {\n\t\t\t\tconsole.warn('could not retrieve marketing data');\n\t\t\t});\n\t\treturn () => {\n\t\t\tcontroller.abort();\n\t\t};\n\t}, [axiosPvt]);\n\tconst updateMarketingSetting = useCallback(() => {\n\t\ttoast.promise(\n\t\t\taxiosPvt.post(`/user/marketing/${urlpath ? urlpath : ''}`, {\n\t\t\t\tserviceOffers,\n\t\t\t\tcomplianceInfo,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tpending: 'Updating your settings preference',\n\t\t\t\tsuccess: 'Successfully updated preference âœ“',\n\t\t\t\terror: 'Could not update your preference. Try again later',\n\t\t\t}\n\t\t);\n\t}, [axiosPvt, complianceInfo, serviceOffers, urlpath]);\n\treturn (\n\t\t<div className='col-12 col-sm-5 mb-3'>\n\t\t\t<div className='row mb-4'>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='custom-controls-stacked pr-2'>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<div className='mb-2'>\n\t\t\t\t\t\t\t\t<b>Email Notification Settings</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\tchecked={complianceInfo}\n\t\t\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetComplianceInfo(p => !p);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel='Compliance Info and Deadlines'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\tchecked={serviceOffers}\n\t\t\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetServiceOffers(p => !p);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlabel='Occassional Service Discounts and Offers'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<Checkbox size='small' checked={true} />}\n\t\t\t\t\t\t\t\tlabel='My Service Updates'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tcolor='warning'\n\t\t\t\t\t\tonClick={updateMarketingSetting}>\n\t\t\t\t\t\tUpdate Email Settings\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default MarketingSetting;\n"],"names":["axiosPvt","useContext","AuthContext","useAxiosPrivate","useState","serviceOffers","setServiceOffers","complianceInfo","setComplianceInfo","urlpath","useParams","id","useEffect","controller","AbortController","get","params","marketingPreference","signal","then","data","so","ServiceOffers","ci","catch","e","console","warn","abort","updateMarketingSetting","useCallback","toast","post","pending","success","error","className","control","size","checked","onChange","p","label","variant","color","onClick"],"sourceRoot":""}